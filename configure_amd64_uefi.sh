#!/usr/bin/env bash

# Do all the things that must be done inside the chroot

set -xe

# ---==[ Set up the timezone and system clock ]==------------------------------
if [ -z "${TIMEZONE}" ]; then
    TIMEZONE='UTC'
fi

ln -sf "/usr/share/zoneinfo/${TIMEZONE}" /etc/localtime
hwclock --systohc --utc

# ---==[ Set up the system language, locale and keymap ]==---------------------
if [ -z "${LOCALE}" ]; then
    LOCALE='en_CA'
fi
if [ -z "${ENCODING}" ]; then
    ENCODING='UTF-8'
fi
if [ -z "${KEYMAP}" ]; then
    KEYMAP='us'
fi

# Uncomment desired locale and regenerate
sed -i "/^#${LOCALE}.${ENCODING} ${ENCODING}/ s/^#//" /etc/locale.gen
locale-gen

cat << EOF > /etc/locale.conf
LANG=${LOCALE}.${ENCODING}
LANGUAGE=${LOCALE}
LC_ALL=C
EOF

echo "KEYMAP=${KEYMAP}" > /etc/vconsole.conf

# ---==[ Set up the new hostname and hosts file ]==----------------------------
if [ -z "${NEWHOSTNAME}" ]; then
    NEWHOSTNAME='cuckoo'
fi
if [ -z "${NEWDOMAIN}" ]; then
    NEWDOMAIN='localdomain'
fi

echo "${NEWHOSTNAME}" > /etc/hostname

cat << EOF > /etc/hosts
# Static table lookup for hostnames.
# See hosts(5) for details.
127.0.0.1  localhost
127.0.1.1  ${NEWHOSTNAME} ${NEWHOSTNAME}.${NEWDOMAIN}
::1  localhost ip6-localhost ip6-loopback
ff02::1  ip6-allnodes
ff02::2  ip6-allrouters
EOF

# ---==[ Set up networking ]==-------------------------------------------------
# /etc/resolv.conf::
# # Generated by dhcpcd from ens18.dhcp
# # /etc/resolv.conf.head can replace this line
# domain localdomain
# nameserver 10.0.0.1
# # /etc/resolv.conf.tail can replace this line

pacman --noconfirm --sync dhcpcd net-tools openssh wireguard-tools
systemctl enable dhcpcd
systemctl enable sshd.service

# Send hostname when doing DHCP stuff
sed -i '/^#hostname/ s/^#//' /etc/dhcpcd.conf

# Replace legacy iptables with netfilter iptables
# pacman --noconfirm --sync iptables-nft
# XXX FIXME TODO  Apparently there is no good way to automate this!!!

# ---==[ Set up an administrator user ]==--------------------------------------
if [ -z "${NEWUSERNAME}" ]; then
    NEWUSERNAME='marvin'
fi
if [ -z "${NEWPASSWORD}" ]; then
    NEWPASSWORD='youwontlikeit'
fi

# Create the new user and set their console password
useradd -m "${NEWUSERNAME}"
echo -e "${NEWPASSWORD}\n${NEWPASSWORD}" | passwd "${NEWUSERNAME}"

# Bestow sudo privileges on the new user
pacman --noconfirm --sync sudo
echo "${NEWUSERNAME} ALL=(ALL:ALL) ALL" > "/etc/sudoers.d/${NEWUSERNAME}"

# ---==[ Install other things we can't live without ]==------------------------
pacman --noconfirm --sync git man-db vim

# ---==[ Build the initrd ]==--------------------------------------------------
# /etc/mkinitcpio.conf
# XXX FIXME TODO Maybe do more stuff here :)
# HOOKS="base udev ... block filesystems ..."
# HOOKS="base udev ... block lvm2 filesystems ..."  # Add lvm2 before 'filesystems'
# HOOKS="... encrypt ... filesystems ..."  # Add 'encrypt' before 'filesystems'
mkinitcpio -p linux

# ---==[ Install the boot loader ]==-------------------------------------------
pacman --noconfirm --sync efibootmgr grub
grub-install --target=x86_64-efi
grub-mkconfig -o /boot/grub/grub.cfg
